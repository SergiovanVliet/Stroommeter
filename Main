#include "stm32f10x.h"
#include "stm32f10x_adc.h"
#include "stm32f10x_dbgmcu.h"
#include "stm32f10x_dma.h"
#include "stm32f10x_exti.h"
#include "stm32f10x_flash.h"
#include "stm32f10x_gpio.h"
#include "stm32f10x_pwr.h"
#include "stm32f10x_rcc.h"
#include "stm32f10x_spi.h"
#include "stm32f10x_tim.h"

#include "ADC_Config.h"
#include "Clock_settings.h"
#include "PinDef.h"

#include "misc.h"

uint16_t a;
uint16_t buffer[10];
uint16_t sum;
float average;
int i;
int k;

void TimerInit (void)
{
	TIM_TimeBaseInitTypeDef timerInitStructure; 
	timerInitStructure.TIM_Prescaler = 36000;
	timerInitStructure.TIM_CounterMode = TIM_CounterMode_Up;
	timerInitStructure.TIM_Period = 1000;
	timerInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;
	timerInitStructure.TIM_RepetitionCounter = 0;
	TIM_TimeBaseInit(TIM4, &timerInitStructure);
	TIM_Cmd(TIM4, ENABLE);
	
	TIM_ITConfig(TIM4, TIM_IT_Update, ENABLE);
}

void EnableTimerInterrupt()
{
    NVIC_InitTypeDef nvicStructure;
    nvicStructure.NVIC_IRQChannel = TIM4_IRQn;
    nvicStructure.NVIC_IRQChannelPreemptionPriority = 0;
    nvicStructure.NVIC_IRQChannelSubPriority = 1;
    nvicStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&nvicStructure);
}

void TIM4_IRQHandler()
{
    if (TIM_GetITStatus(TIM4, TIM_IT_Update) != RESET)
    {
        TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
        
    }
}


int main(void)
{
	RCC_Configuration();
	ADC_Config ();
	
	
	

	sum=0;
	average=0;

	while(1)
	{
		a=0;
		for (i=0; i<10; i++)
		{
			//a = ADC_GetConversionValue(ADC1);
			buffer[i] = a;
			a=a+10;

		}



		for(k=0; k<10; k++)
		{
			sum = sum+buffer[k];
		}

		average = sum/10;



	}

}



